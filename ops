{"author":{"id":"ff90e8c1032712f76e3c119e253ae3a84614b47da224d1a3450b4f469b0523a9"},"ops":[{"type":3,"timestamp":1678997986,"nonce":"W0nuoZek0Io710lgG1mWgNj7Sco=","metadata":{"github-id":"IC_kwDOBLCY8M5Xx1mI","github-url":"https://github.com/svpcom/wfb-ng/issues/279#issuecomment-1472682376"},"message":"wfg-ng how have full-mirror proxy (localhost:5760) and you can write standalone program which will subscribe to mavlink messages and do some actions. Also there is `call_on_arm` and `call_on_disarm` hooks.  For example I use it for  starring/stopping video recording when drone arms/disarms.\n\nThere are several joystick commands which QGC issues: drone control and gimbal control. All of them are handled by autopilot, but PX4 has virtual gimbal subsystem that can pass this messages to physical gimbals (for example storm32) which is connected to autopilot UART.  But number of this commands are limited and hardcoded into QGC. For example there is no \"zoom in/zoom out\" commands. So for these tasks I use standalone python program which poll `/dev/input/js0` and call camera url directly via ip-tunnel.","files":null},{"type":6,"timestamp":1678998359,"nonce":"STE979ZIW0q+ycwRbykVBneShZY=","metadata":{"github-id":"UCE_lALOBLCY8M5Xx1mIzi6umyo"},"target":"96b056ee828d6c28fab542ce7eac23ee8fbee722c8a412043deba5b48ff8bac5","message":"wfg-ng now have full-mirror proxy (localhost:5760) and you can write standalone program which will subscribe to mavlink messages and do some actions. Also there is `call_on_arm` and `call_on_disarm` hooks.  For example I use it for  starring/stopping video recording when drone arms/disarms.\n\nThere are several joystick commands which QGC issues: drone control and gimbal control. All of them are handled by autopilot, but PX4 has virtual gimbal subsystem that can pass this messages to physical gimbals (for example storm32) which is connected to autopilot UART.  But number of this commands are limited and hardcoded into QGC. For example there is no \"zoom in/zoom out\" commands. So for these tasks I use standalone python program which poll `/dev/input/js0` and call camera url directly via ip-tunnel.","files":null},{"type":6,"timestamp":1678998388,"nonce":"NSeivsGdgH0tZ3l5ndU3NUJn0qQ=","metadata":{"github-id":"UCE_lALOBLCY8M5Xx1mIzi6unOg"},"target":"96b056ee828d6c28fab542ce7eac23ee8fbee722c8a412043deba5b48ff8bac5","message":"wfg-ng now have full-mirror proxy (localhost:5760) and you can write standalone program which will subscribes to mavlink messages and do some actions. Also there are `call_on_arm` and `call_on_disarm` hooks.  For example I use it for  starring/stopping video recording when drone arms/disarms.\n\nThere are several joystick commands which QGC issues: drone control and gimbal control. All of them are handled by autopilot, but PX4 has virtual gimbal subsystem that can pass this messages to physical gimbals (for example storm32) which is connected to autopilot UART.  But number of this commands are limited and hardcoded into QGC. For example there is no \"zoom in/zoom out\" commands. So for these tasks I use standalone python program which poll `/dev/input/js0` and call camera url directly via ip-tunnel.","files":null},{"type":6,"timestamp":1678998420,"nonce":"BhzPxgi3nmdZup/b/FYZZIv7dZg=","metadata":{"github-id":"UCE_lALOBLCY8M5Xx1mIzi6unw8"},"target":"96b056ee828d6c28fab542ce7eac23ee8fbee722c8a412043deba5b48ff8bac5","message":"wfg-ng now have full-mirror proxy (localhost:5760) and you can write standalone program which will subscribes to mavlink messages and do some actions. Also there are `call_on_arm` and `call_on_disarm` hooks.  For example I use it for  starting/stopping video recording when drone arms/disarms.\n\nThere are several joystick commands which QGC can issue: drone control and gimbal control. All of them are handled by autopilot, but PX4 has virtual gimbal subsystem that can pass this messages to physical gimbals (for example storm32) which is connected to autopilot UART.  But number of this commands are limited and hardcoded into QGC. For example there is no \"zoom in/zoom out\" commands. So for these tasks I use standalone python program which poll `/dev/input/js0` and call camera url directly via ip-tunnel.","files":null}]}