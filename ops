{"author":{"id":"ff90e8c1032712f76e3c119e253ae3a84614b47da224d1a3450b4f469b0523a9"},"ops":[{"type":3,"timestamp":1494759018,"nonce":"ZgEdid0Ae4ynz8eLd+l0JIQSl1s=","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMwMTMwNDM3Mw==","github-url":"https://github.com/svpcom/wfb-ng/issues/2#issuecomment-301304373"},"message":"rx_ring is a circular buffer, where we store packets, grouped by FEC blocks. It has two variables: *rx_ring_front* (index of the first allocated FEC block) and *alloc_size* -- number of allocated blocks.\n\nWhen we receive a new packet it can belongs to:\n1. New fec block - we need to allocate it in RX ring (do nothing if block was already processed)\n2. Already existing fec block - we need to add it to them (do nothing if packet already processed)\n\nWhen we allocate a new block we have following choices:\n1. Add a new block to rx ring tail.\n2. Override a block at rx ring head if rx ring is full.\n\nblock idx is rounded by modulo 256 - i.e.  0, 1, 2, ... 255, 0, 1 ...\nFor example:\n1.  *rx_ring_front* == 5 and *alloc_size* == 2 and last last allocated block has *block_idx* == 132\n2.  We got a packet with *block_idx* == 141. We need to allocate a (141 - 132) mod 256 = 9 new blocks. Such packet reordering can happens due to different latency in WiFi adapters if we use multiple adapters/antennas or packet reordering in adapter's internal queue.\n3. This code allocates *new_blocks* in rx ring. It clears rx ring slots from previous data and write indexes of new blocks to rx ring slots.","files":null},{"type":5,"timestamp":1494888049,"nonce":"b29stztVd2mURtU9eQv9M/suvo0=","metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDEwODMxNjc0MjU="},"added":["question"],"removed":[]},{"type":3,"timestamp":1494888390,"nonce":"R5XWHsInYCHDJIS/r2yW2Zk+Oi8=","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMwMTYyNjQxNA==","github-url":"https://github.com/svpcom/wfb-ng/issues/2#issuecomment-301626414"},"message":"added to wiki","files":null},{"type":4,"timestamp":1494888390,"nonce":"RZUbJIzRMrjGZPPq5X1IqU0TM4A=","metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MTA4MzE3MzA1Ng=="},"status":2}]}