{"author":{"id":"133713fc1ebfed0d1d1fffbcdbc3027856bcceda460a4667c92d3057bbb4e71c"},"ops":[{"type":3,"timestamp":1575623423,"nonce":"ejVgcax+v0xBqdi1v23jQ36gyak=","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU2MjQ5MzQ5OQ==","github-url":"https://github.com/svpcom/wfb-ng/issues/46#issuecomment-562493499"},"message":"I set up latest WFB following:\n- https://github.com/svpcom/wifibroadcast\n- https://github.com/svpcom/wifibroadcast/wiki/Setup-HOWTO    \n(`git clone` of the repo)\n\nI did not configure mavlink (at least for now, for now I'm trying to get video stream working)\n\nI set both rx and tx in a suggested way. Before I've been using developement compilation (`make`) and shell scripts which are obsolete now.\n\nIP tunnel works - I can ping tx from rx, ~20ms and there are no dropped packets (at least I haven't seen any).\n\nBecause I'm on RPi (tx side), there are no `vaapih264enc` (Nvidia hardware encoder), so instead of:\n```\ngst-launch-1.0 videotestsrc ! videoconvert ! video/x-raw,format=NV12,framerate=30/1,width=1280,height=720 ! vaapih264enc bitrate=4000 rate-control=vbr max-bframes=0 ! rtph264pay config-interval=1 ! udpsink host=127.0.0.1 port=5602\n```\nI used:\n```\ngst-launch-1.0 videotestsrc ! videoconvert ! video/x-raw,framerate=30/1,width=1280,height=720 ! omxh264enc target-bitrate=4000000 control-rate=variable ! rtph264pay config-interval=1 ! udpsink host=127.0.0.1 port=5602\n```\n\n`First try it without WFB` - I'm not sure what you mean here, but I assumed my method of using LAN connection - works perfectly fine. When I try with WFB, results are more or less the same as described above (in the first post) - I can see color pattern sometimes but mostly screen is gray with only \"noise\" part changing at ~2 FPS (or less). In `var/log/syslog` I can see messages informing about lost packets for `video rx` and `tunnel rx`. `ping` shows response times more than ~1000ms (1s) and this time packets are being lost.\n\nWhen I go pretty low with transmission bandwidth, like:\n```\ngst-launch-1.0 videotestsrc ! omxh264enc target-bitrate=100000 control-rate=variable ! rtph264pay config-interval=1 ! udpsink host=127.0.0.1 port=5602\n```\nso with default small test image and 100kbps of stream, I can see color pattern but it turns gray as well, FPS is better but even under those conditions still well below expected one. There's also delay, so all that suggests some issues with bandwidth.\n\nI also tried to stream A video from RPi camera:\n```\nraspivid --nopreview --awb auto -ih -t 0 -w 1640 -h 922 -fps 60 -b 4000000 -g 30 -pf high -o - | gst-launch-1.0 fdsrc ! h264parse !  rtph264pay !  udpsink host=127.0.0.1 port=5602\n```\nAnd sadly it looks exactly the same as before.\n\nAny additional ideas what I might check?\n\nI also think I found a bug (should I fill an issue?) - ON my laptop with Ubuntu 18.04 LTS installed, when I ran `make deb` it created a deb file with `python3-` prefix, I checked and after I installed deb file, I was able to import for example `telemetry` or `telemetry.server` under `python3`, but when I start a service it's trying to run it using Python 2. I edited service script to use Python 3 interpreter to fix (workaround) this issue.","files":null}]}