{"author":{"id":"a28afa57d6bff5bf0b350d7de160b549f8866007382b1363cbfea06d8b7bf9a4"},"ops":[{"type":6,"timestamp":1615393164,"nonce":"83WJZ9r+thAjit7ssGtwZZc2D+I=","metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo1MDU4ODE4Mjk="},"target":"e2de77a1157539de3ba8bf9810d34d3633856662a9ada42beeb8d0f59d3867c2","message":"Hi Vasily,\nThere is a memory leak in your `fec.c`, specifically in function `_invert_mat()`. The four allocations\n\n    unsigned* indxc = (unsigned*) malloc (k * sizeof(unsigned));\n    unsigned* indxr = (unsigned*) malloc (k * sizeof(unsigned));\n    unsigned* ipiv = (unsigned*) malloc (k * sizeof(unsigned));\n    gf *id_row = NEW_GF_MATRIX (1, k);\n\nare never released.\n\n[An updated fec.c](https://github.com/tahoe-lafs/zfec/blob/master/zfec/fec.c) was actually released by the Tahoe-LAFS community three years ago. However you cannot use it as is, because they also changed the signature of `fec_encode()` adding two parameters, which makes it incompatible with your `tx.cpp`.\n\nTherefore the easiest for you is to update your own `fec.c` by adding those four lines right at the end of `_invert_mat()`:\n\n    free(indxc);\n    free(indxr);\n    free(ipiv);\n    free(id_row);\n\nHope that helps !\nXavier","files":null}]}