{"author":{"id":"ff90e8c1032712f76e3c119e253ae3a84614b47da224d1a3450b4f469b0523a9"},"ops":[{"type":3,"timestamp":1537349623,"nonce":"bVB3fc4E8MuhvhkdfrOgdW5+oIE=","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyMjcyNzk1NQ==","github-url":"https://github.com/svpcom/wfb-ng/issues/16#issuecomment-422727955"},"message":"https://download.libsodium.org/doc/secret-key_cryptography/aead/aes-256-gcm\nReplace  crypto_aead_chacha20poly1305* with crypto_aead_aes256gcm* (functions and variable types)\nBut aes is slow compared to chacha20poly1305","files":null},{"type":3,"timestamp":1537349762,"nonce":"fXgLoYYDIuBVbhng89Pqpa2PEP4=","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyMjcyODc4OA==","github-url":"https://github.com/svpcom/wfb-ng/issues/16#issuecomment-422728788"},"message":"Be aware - it will not work on ARM:\n```\nLimitations\n\nThe current implementation of this construction is hardware-accelerated and requires the Intel SSSE3 extensions, as well as the aesni and pclmul instructions.\n\nIntel Westmere processors (introduced in 2010) and newer meet the requirements.\n\nThere are no plans to support non hardware-accelerated implementations of AES-GCM. If portability is a concern, use ChaCha20-Poly1305 instead.\n```","files":null},{"type":4,"timestamp":1545571223,"nonce":"HTNR6/s5FTdspSGGy5kshIhFQqE=","metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MjA0MjQ2NTE3Ng=="},"status":2}]}